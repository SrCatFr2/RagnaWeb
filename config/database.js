const mongoose = require('mongoose');

const connectDB = async () => {
    try {
        const conn = await mongoose.connect(process.env.MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });

        console.log(`üçÉ MongoDB conectado: ${conn.connection.host}`);
        console.log(`üìä Base de datos: ${conn.connection.name}`);

        // Verificar y limpiar √≠ndices problem√°ticos
        const db = conn.connection.db;
        try {
            const collections = await db.listCollections().toArray();

            for (const collection of collections) {
                if (collection.name === 'users') {
                    const usersCollection = db.collection('users');
                    const indexes = await usersCollection.indexes();

                    // Buscar √≠ndice de email
                    const emailIndex = indexes.find(index => index.name === 'email_1');
                    if (emailIndex) {
                        console.log('‚ö†Ô∏è  √çndice de email encontrado, eliminando...');
                        try {
                            await usersCollection.dropIndex('email_1');
                            console.log('‚úÖ √çndice de email eliminado');
                        } catch (dropError) {
                            console.log('‚ÑπÔ∏è  No se pudo eliminar el √≠ndice de email');
                        }
                    }
                }
            }
        } catch (indexError) {
            console.log('‚ÑπÔ∏è  No se pudieron verificar los √≠ndices');
        }

        // Eventos de conexi√≥n
        mongoose.connection.on('error', (err) => {
            console.error('‚ùå Error de MongoDB:', err);
        });

        mongoose.connection.on('disconnected', () => {
            console.log('üîå MongoDB desconectado');
        });

        // Graceful shutdown
        process.on('SIGINT', async () => {
            await mongoose.connection.close();
            console.log('üîí Conexi√≥n MongoDB cerrada por terminaci√≥n de la app');
            process.exit(0);
        });

    } catch (error) {
        console.error('‚ùå Error conectando a MongoDB:', error.message);

        // Si es error de √≠ndice duplicado, intentar limpiar
        if (error.message.includes('E11000') && error.message.includes('email')) {
            console.log('üîß Intentando limpiar base de datos...');
            // Aqu√≠ podr√≠as llamar a la funci√≥n de limpieza
        }

        process.exit(1);
    }
};

module.exports = connectDB;